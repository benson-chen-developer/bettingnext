"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/player/[paramSport]/[paramLeague]/[paramPlayer]",{

/***/ "./src/Context/functions/convertStatName.ts":
/*!**************************************************!*\
  !*** ./src/Context/functions/convertStatName.ts ***!
  \**************************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   convertStatName: function() { return /* binding */ convertStatName; }\n/* harmony export */ });\n/* Will turn AST into Asist */ var convertStatName = function(shortName) {\n    var stats = shortName.split(\"+\");\n    var longStats = stats.map(function(s) {\n        if (s === \"PTS\") return \"Points\";\n        else if (s === \"REB\") return \"Rebounds\";\n        else if (s === \"AST\") return \"Asists\";\n        else if (s === \"BLK\") return \"Blocks\";\n        else if (s === \"STL\") return \"Steals\";\n        else if (s === \"PF\") return \"Fouls\";\n        else if (s === \"TOV\") return \"Turnovers\";\n        else if (s === \"FGM\") return \"Field Goals Made\";\n        else if (s === \"3PM\") return \"3 Pointers Made\";\n        else if (s === \"FTM\") return \"Free Throws Made\";\n        else if (s === \"FGA\") return \"Field Goals Attempted\";\n        else if (s === \"3PA\") return \"3 Pointers Attempted\";\n        else if (s === \"FTA\") return \"Free Throws Attempted\";\n    });\n    return longStats.join(\"+\");\n};\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvQ29udGV4dC9mdW5jdGlvbnMvY29udmVydFN0YXROYW1lLnRzIiwibWFwcGluZ3MiOiI7Ozs7QUFDQSw0QkFBNEIsR0FDckIsSUFBTUEsa0JBQWtCLFNBQUNDO0lBQzVCLElBQUlDLFFBQVFELFVBQVVFLEtBQUssQ0FBQztJQUU1QixJQUFJQyxZQUFZRixNQUFNRyxHQUFHLENBQUMsU0FBQ0M7UUFDdkIsSUFBR0EsTUFBTSxPQUFPLE9BQU87YUFDbEIsSUFBR0EsTUFBTSxPQUFPLE9BQU87YUFDdkIsSUFBR0EsTUFBTSxPQUFPLE9BQU87YUFDdkIsSUFBR0EsTUFBTSxPQUFPLE9BQU87YUFDdkIsSUFBR0EsTUFBTSxPQUFPLE9BQU87YUFDdkIsSUFBR0EsTUFBTSxNQUFNLE9BQU87YUFDdEIsSUFBR0EsTUFBTSxPQUFPLE9BQU87YUFDdkIsSUFBR0EsTUFBTSxPQUFPLE9BQU87YUFDdkIsSUFBR0EsTUFBTSxPQUFPLE9BQU87YUFDdkIsSUFBR0EsTUFBTSxPQUFPLE9BQU87YUFDdkIsSUFBR0EsTUFBTSxPQUFPLE9BQU87YUFDdkIsSUFBR0EsTUFBTSxPQUFPLE9BQU87YUFDdkIsSUFBR0EsTUFBTSxPQUFPLE9BQU87SUFDaEM7SUFHQSxPQUFPRixVQUFVRyxJQUFJLENBQUM7QUFDMUIsRUFBQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9zcmMvQ29udGV4dC9mdW5jdGlvbnMvY29udmVydFN0YXROYW1lLnRzPzMxZTIiXSwic291cmNlc0NvbnRlbnQiOlsiXG4vKiBXaWxsIHR1cm4gQVNUIGludG8gQXNpc3QgKi9cbmV4cG9ydCBjb25zdCBjb252ZXJ0U3RhdE5hbWUgPSAoc2hvcnROYW1lOnN0cmluZyk6c3RyaW5nID0+IHtcbiAgICBsZXQgc3RhdHMgPSBzaG9ydE5hbWUuc3BsaXQoJysnKTtcblxuICAgIGxldCBsb25nU3RhdHMgPSBzdGF0cy5tYXAoKHMpID0+IHtcbiAgICAgICAgaWYocyA9PT0gJ1BUUycpIHJldHVybiAnUG9pbnRzJztcbiAgICAgICAgZWxzZSBpZihzID09PSAnUkVCJykgcmV0dXJuICdSZWJvdW5kcyc7XG4gICAgICAgIGVsc2UgaWYocyA9PT0gJ0FTVCcpIHJldHVybiAnQXNpc3RzJztcbiAgICAgICAgZWxzZSBpZihzID09PSAnQkxLJykgcmV0dXJuICdCbG9ja3MnO1xuICAgICAgICBlbHNlIGlmKHMgPT09ICdTVEwnKSByZXR1cm4gJ1N0ZWFscyc7XG4gICAgICAgIGVsc2UgaWYocyA9PT0gJ1BGJykgcmV0dXJuICdGb3Vscyc7XG4gICAgICAgIGVsc2UgaWYocyA9PT0gJ1RPVicpIHJldHVybiAnVHVybm92ZXJzJztcbiAgICAgICAgZWxzZSBpZihzID09PSAnRkdNJykgcmV0dXJuICdGaWVsZCBHb2FscyBNYWRlJztcbiAgICAgICAgZWxzZSBpZihzID09PSAnM1BNJykgcmV0dXJuICczIFBvaW50ZXJzIE1hZGUnO1xuICAgICAgICBlbHNlIGlmKHMgPT09ICdGVE0nKSByZXR1cm4gJ0ZyZWUgVGhyb3dzIE1hZGUnO1xuICAgICAgICBlbHNlIGlmKHMgPT09ICdGR0EnKSByZXR1cm4gJ0ZpZWxkIEdvYWxzIEF0dGVtcHRlZCc7XG4gICAgICAgIGVsc2UgaWYocyA9PT0gJzNQQScpIHJldHVybiAnMyBQb2ludGVycyBBdHRlbXB0ZWQnO1xuICAgICAgICBlbHNlIGlmKHMgPT09ICdGVEEnKSByZXR1cm4gJ0ZyZWUgVGhyb3dzIEF0dGVtcHRlZCc7XG4gICAgfSlcblxuICAgIFxuICAgIHJldHVybiBsb25nU3RhdHMuam9pbignKycpO1xufSJdLCJuYW1lcyI6WyJjb252ZXJ0U3RhdE5hbWUiLCJzaG9ydE5hbWUiLCJzdGF0cyIsInNwbGl0IiwibG9uZ1N0YXRzIiwibWFwIiwicyIsImpvaW4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/Context/functions/convertStatName.ts\n"));

/***/ })

});