"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/player/[paramLeague]/[paramPlayer]",{

/***/ "./src/functions/players.ts":
/*!**********************************!*\
  !*** ./src/functions/players.ts ***!
  \**********************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   emptyStats: function() { return /* binding */ emptyStats; },\n/* harmony export */   fillStats: function() { return /* binding */ fillStats; },\n/* harmony export */   intialGameParse: function() { return /* binding */ intialGameParse; }\n/* harmony export */ });\n/* harmony import */ var _swc_helpers_object_spread__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @swc/helpers/_/_object_spread */ \"./node_modules/@swc/helpers/esm/_object_spread.js\");\n\nvar FantasyScoring = function(stat) {\n    if (stat === \"PTS\") return 1;\n    else if (stat === \"REB\") return 1.2;\n    else if (stat === \"AST\") return 1.5;\n    else if (stat === \"STL\") return 3;\n    else if (stat === \"BLK\") return 3;\n    else if (stat === \"TO\") return -1;\n    else return 0;\n};\nvar emptyStats = {\n    PTS: 0,\n    REB: 0,\n    AST: 0,\n    STL: 0,\n    BLK: 0,\n    TO: 0,\n    FGM: 0,\n    FGA: 0,\n    \"3PM\": 0,\n    \"3PA\": 0,\n    FTM: 0,\n    FTA: 0,\n    FAN: 0\n};\n/*\n    Gets the\n        - 2 teams\n        - all players on each team\n        - and intial whole game stats \n            - (we loop through everything so it makes sense to might as well get this)\n*/ var intialGameParse = function(actions) {\n    var i = 0;\n    var teams = [];\n    actions.forEach(function(action) {\n        /* This is to find both teams */ if (teams.length < 2) {\n            if (action.teamTricode) {\n                var teamTriCode = teams.find(function(team) {\n                    return team.name === action.teamTricode;\n                });\n                if (teamTriCode === undefined) {\n                    teams.push({\n                        name: action.teamTricode,\n                        stats: {\n                            PTS: 0,\n                            REB: 0,\n                            AST: 0,\n                            STL: 0,\n                            BLK: 0,\n                            TO: 0,\n                            \"3PM\": 0,\n                            \"3PA\": 0,\n                            FGM: 0,\n                            FGA: 0,\n                            FTA: 0,\n                            FTM: 0,\n                            FAN: 0\n                        },\n                        actions: actions,\n                        players: []\n                    });\n                }\n            }\n            i++;\n        }\n        /* Add up the total stats for each team */ var team = teams.find(function(t) {\n            return t.name === action.teamTricode;\n        });\n        if (team) {\n            team.stats[action.actionType] += action.amount;\n            team.stats[\"FAN\"] += FantasyScoring(action.actionType);\n        }\n        /* Find all the players on this team */ var teamOfCurrentPlayer = teams.find(function(team) {\n            return team.name === action.teamTricode;\n        });\n        if (!(teamOfCurrentPlayer === null || teamOfCurrentPlayer === void 0 ? void 0 : teamOfCurrentPlayer.players.find(function(p) {\n            return p === action.name;\n        })) && action.name) {\n            teamOfCurrentPlayer === null || teamOfCurrentPlayer === void 0 ? void 0 : teamOfCurrentPlayer.players.push(action.name);\n        }\n    });\n    // console.log(teams)\n    return teams;\n};\n/*\n    condition can be Q1, Q2, Q3, Q4, H1, H2, W\n\n    playerName should be in C. Clark format\n\n    if playerName is \"\" then just get all stats\n*/ var fillStats = function(playerName, condition, actions) {\n    var intialStats = (0,_swc_helpers_object_spread__WEBPACK_IMPORTED_MODULE_0__._)({}, emptyStats);\n    var didPlay = false;\n    actions.forEach(function(action) {\n        var _action_name;\n        /* This to see if the current action is what the player is looking for */ var conditionMet = false;\n        var playerConditionMet = false;\n        if (condition === \"1st Quarter\" && action.period === 1) conditionMet = true;\n        else if (condition === \"2nd Quarter\" && action.period === 2) conditionMet = true;\n        else if (condition === \"3rd Quarter\" && action.period === 3) conditionMet = true;\n        else if (condition === \"4th Quarter\" && action.period === 4) conditionMet = true;\n        else if (condition === \"1st Half\" && (action.period === 1 || action.period === 2)) conditionMet = true;\n        else if (condition === \"2nd Half\" && (action.period === 3 || action.period === 4)) conditionMet = true;\n        else if (condition === \"Whole Game\") conditionMet = true;\n        if (playerName.toLowerCase() === (action === null || action === void 0 ? void 0 : (_action_name = action.name) === null || _action_name === void 0 ? void 0 : _action_name.toLowerCase())) playerConditionMet = true;\n        else if (playerName === \"\") playerConditionMet = true;\n        if (conditionMet && playerConditionMet) {\n            didPlay = true;\n            intialStats[action.actionType] += action.amount;\n            intialStats[\"FAN\"] += FantasyScoring(action.actionType);\n        }\n    });\n    //If did not play then we return -1 PTS so just don't show this game\n    if (!didPlay) intialStats[\"PTS\"] = -1;\n    return intialStats;\n};\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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TUFBTSxLQUFLLEdBQUdGLGVBQWU7YUFDdEUsSUFBR0gsY0FBYyxpQkFBaUJsQixPQUFPdUIsTUFBTSxLQUFLLEdBQUdGLGVBQWU7YUFDdEUsSUFBR0gsY0FBYyxpQkFBaUJsQixPQUFPdUIsTUFBTSxLQUFLLEdBQUdGLGVBQWU7YUFDdEUsSUFBR0gsY0FBYyxjQUFlbEIsQ0FBQUEsT0FBT3VCLE1BQU0sS0FBSyxLQUFLdkIsT0FBT3VCLE1BQU0sS0FBSyxJQUFJRixlQUFlO2FBQzVGLElBQUdILGNBQWMsY0FBZWxCLENBQUFBLE9BQU91QixNQUFNLEtBQUssS0FBS3ZCLE9BQU91QixNQUFNLEtBQUssSUFBSUYsZUFBZTthQUM1RixJQUFHSCxjQUFjLGNBQWNHLGVBQWU7UUFDbkQsSUFBR0osV0FBV08sV0FBVyxRQUFPeEIsbUJBQUFBLDhCQUFBQSxlQUFBQSxPQUFRTSxJQUFJLGNBQVpOLG1DQUFBQSxhQUFjd0IsV0FBVyxLQUFJRixxQkFBcUI7YUFDN0UsSUFBR0wsZUFBZSxJQUFJSyxxQkFBcUI7UUFFaEQsSUFBR0QsZ0JBQWdCQyxvQkFBbUI7WUFDbENGLFVBQVU7WUFDVkQsV0FBVyxDQUFDbkIsT0FBT1ksVUFBVSxDQUFDLElBQUlaLE9BQU9hLE1BQU07WUFDL0NNLFdBQVcsQ0FBQyxNQUFNLElBQUkzQixlQUFlUSxPQUFPWSxVQUFVO1FBQzFEO0lBQ0o7SUFFQSxvRUFBb0U7SUFDcEUsSUFBRyxDQUFDUSxTQUFTRCxXQUFXLENBQUMsTUFBTSxHQUFHLENBQUM7SUFFbkMsT0FBT0E7QUFDWCxFQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL3NyYy9mdW5jdGlvbnMvcGxheWVycy50cz9mZDNiIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCB0eXBlIEFjdGlvbiA9IHtcbiAgICBuYW1lOiBzdHJpbmdcbiAgICBwZXJpb2Q6IG51bWJlcixcbiAgICBjbG9jazogc3RyaW5nLFxuICAgIHRlYW1Ucmljb2RlOiBzdHJpbmcsXG4gICAgYWN0aW9uVHlwZToga2V5b2YgU3RhdHMsIC8vc3RyaW5nXG4gICAgYW1vdW50OiBudW1iZXIsXG4gICAgcGljSWQ6IG51bWJlclxufVxuXG5leHBvcnQgdHlwZSBTdGF0cyA9IHtcbiAgICBcIlBUU1wiOiBudW1iZXIsIFwiUkVCXCI6IG51bWJlciwgXCJBU1RcIjpudW1iZXIsXG4gICAgXCJTVExcIjogbnVtYmVyLCBcIkJMS1wiOiBudW1iZXIsIFwiVE9cIjogbnVtYmVyLFxuICAgIFwiM1BNXCI6IG51bWJlciwgXCIzUEFcIjogbnVtYmVyLCBcbiAgICBcIkZHTVwiOiAgbnVtYmVyLCBcIkZHQVwiOiBudW1iZXIsXG4gICAgXCJGVEFcIjogbnVtYmVyLCBcIkZUTVwiOiBudW1iZXIsXG4gICAgXCJGQU5cIjogbnVtYmVyXG59XG5cbmV4cG9ydCB0eXBlIEdhbWUyID0ge1xuICAgIGRhdGU6IHN0cmluZyxcbiAgICB0ZWFtczogW3N0cmluZywgc3RyaW5nXSxcbiAgICBzdGF0czogU3RhdHMsXG4gICAgYWN0aW9uczogQWN0aW9uW11cbn1cblxudHlwZSBUZWFtID0ge1xuICAgIG5hbWU6IHN0cmluZyxcbiAgICBzdGF0czogU3RhdHMsXG4gICAgcGxheWVyczogc3RyaW5nW11cbiAgICBhY3Rpb25zOiBBY3Rpb25bXVxufVxuXG5jb25zdCBGYW50YXN5U2NvcmluZyA9IChzdGF0OiBzdHJpbmcpOiBudW1iZXIgPT4ge1xuICAgIGlmKHN0YXQgPT09IFwiUFRTXCIpIHJldHVybiAxO1xuICAgIGVsc2UgaWYoc3RhdCA9PT0gXCJSRUJcIikgcmV0dXJuIDEuMjtcbiAgICBlbHNlIGlmKHN0YXQgPT09IFwiQVNUXCIpIHJldHVybiAxLjU7XG4gICAgZWxzZSBpZihzdGF0ID09PSBcIlNUTFwiKSByZXR1cm4gMztcbiAgICBlbHNlIGlmKHN0YXQgPT09IFwiQkxLXCIpIHJldHVybiAzO1xuICAgIGVsc2UgaWYoc3RhdCA9PT0gXCJUT1wiKSByZXR1cm4gLTE7XG4gICAgZWxzZSByZXR1cm4gMDtcbn1cbmV4cG9ydCBjb25zdCBlbXB0eVN0YXRzID0ge1xuICAgIFwiUFRTXCI6IDAsIFwiUkVCXCI6IDAsIFwiQVNUXCI6MCxcbiAgICBcIlNUTFwiOiAwLCBcIkJMS1wiOiAwLCBcIlRPXCI6IDAsXG4gICAgXCJGR01cIjogIDAsIFwiRkdBXCI6IDAsXG4gICAgXCIzUE1cIjogMCwgXCIzUEFcIjogMCwgXG4gICAgXCJGVE1cIjogMCwgXCJGVEFcIjogMCxcbiAgICBcIkZBTlwiOiAwXG59XG5cbi8qXG4gICAgR2V0cyB0aGVcbiAgICAgICAgLSAyIHRlYW1zXG4gICAgICAgIC0gYWxsIHBsYXllcnMgb24gZWFjaCB0ZWFtXG4gICAgICAgIC0gYW5kIGludGlhbCB3aG9sZSBnYW1lIHN0YXRzIFxuICAgICAgICAgICAgLSAod2UgbG9vcCB0aHJvdWdoIGV2ZXJ5dGhpbmcgc28gaXQgbWFrZXMgc2Vuc2UgdG8gbWlnaHQgYXMgd2VsbCBnZXQgdGhpcylcbiovXG5leHBvcnQgY29uc3QgaW50aWFsR2FtZVBhcnNlID0gKGFjdGlvbnM6IEFjdGlvbltdKTogVGVhbVtdID0+IHtcbiAgICBsZXQgaSA9IDA7IGxldCB0ZWFtczogVGVhbVtdID0gW107XG5cbiAgICBhY3Rpb25zLmZvckVhY2goYWN0aW9uID0+IHtcbiAgICAgICAgLyogVGhpcyBpcyB0byBmaW5kIGJvdGggdGVhbXMgKi9cbiAgICAgICAgaWYodGVhbXMubGVuZ3RoIDwgMil7XG4gICAgICAgICAgICBpZihhY3Rpb24udGVhbVRyaWNvZGUpe1xuICAgICAgICAgICAgICAgIGNvbnN0IHRlYW1UcmlDb2RlID0gdGVhbXMuZmluZCh0ZWFtID0+IHRlYW0ubmFtZSA9PT0gYWN0aW9uLnRlYW1Ucmljb2RlKTtcbiAgICAgICAgICAgICAgICBpZih0ZWFtVHJpQ29kZSA9PT0gdW5kZWZpbmVkKXtcbiAgICAgICAgICAgICAgICAgICAgdGVhbXMucHVzaCh7XG4gICAgICAgICAgICAgICAgICAgICAgICBuYW1lOiBhY3Rpb24udGVhbVRyaWNvZGUsXG4gICAgICAgICAgICAgICAgICAgICAgICBzdGF0czoge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFwiUFRTXCI6IDAsIFwiUkVCXCI6IDAsIFwiQVNUXCI6MCxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBcIlNUTFwiOiAwLCBcIkJMS1wiOiAwLCBcIlRPXCI6IDAsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgXCIzUE1cIjogMCwgXCIzUEFcIjogMCwgXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgXCJGR01cIjogIDAsIFwiRkdBXCI6IDAsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgXCJGVEFcIjogMCwgXCJGVE1cIjogMCxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBcIkZBTlwiOiAwXG4gICAgICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgYWN0aW9uczogYWN0aW9ucyxcbiAgICAgICAgICAgICAgICAgICAgICAgIHBsYXllcnM6IFtdXG4gICAgICAgICAgICAgICAgICAgIH0pXG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaSsrO1xuICAgICAgICB9XG5cbiAgICAgICAgLyogQWRkIHVwIHRoZSB0b3RhbCBzdGF0cyBmb3IgZWFjaCB0ZWFtICovXG4gICAgICAgIGNvbnN0IHRlYW0gPSB0ZWFtcy5maW5kKHQgPT4gdC5uYW1lID09PSBhY3Rpb24udGVhbVRyaWNvZGUpO1xuICAgICAgICBpZih0ZWFtKXtcbiAgICAgICAgICAgIHRlYW0uc3RhdHNbYWN0aW9uLmFjdGlvblR5cGVdICs9IGFjdGlvbi5hbW91bnQ7XG4gICAgICAgICAgICB0ZWFtLnN0YXRzW1wiRkFOXCJdICs9IEZhbnRhc3lTY29yaW5nKGFjdGlvbi5hY3Rpb25UeXBlKTtcbiAgICAgICAgfVxuXG4gICAgICAgIC8qIEZpbmQgYWxsIHRoZSBwbGF5ZXJzIG9uIHRoaXMgdGVhbSAqL1xuICAgICAgICBsZXQgdGVhbU9mQ3VycmVudFBsYXllciA9IHRlYW1zLmZpbmQodGVhbSA9PiB0ZWFtLm5hbWUgPT09IGFjdGlvbi50ZWFtVHJpY29kZSk7XG4gICAgICAgIGlmKCF0ZWFtT2ZDdXJyZW50UGxheWVyPy5wbGF5ZXJzLmZpbmQocCA9PiBwID09PSBhY3Rpb24ubmFtZSkgJiYgYWN0aW9uLm5hbWUpe1xuICAgICAgICAgICAgdGVhbU9mQ3VycmVudFBsYXllcj8ucGxheWVycy5wdXNoKGFjdGlvbi5uYW1lKTtcbiAgICAgICAgfVxuICAgIH0pXG5cbiAgICAvLyBjb25zb2xlLmxvZyh0ZWFtcylcbiAgICByZXR1cm4gdGVhbXM7XG59XG5cbi8qXG4gICAgY29uZGl0aW9uIGNhbiBiZSBRMSwgUTIsIFEzLCBRNCwgSDEsIEgyLCBXXG5cbiAgICBwbGF5ZXJOYW1lIHNob3VsZCBiZSBpbiBDLiBDbGFyayBmb3JtYXRcblxuICAgIGlmIHBsYXllck5hbWUgaXMgXCJcIiB0aGVuIGp1c3QgZ2V0IGFsbCBzdGF0c1xuKi9cbmV4cG9ydCBjb25zdCBmaWxsU3RhdHMgPSAocGxheWVyTmFtZTogc3RyaW5nLCBjb25kaXRpb246IHN0cmluZywgYWN0aW9uczogQWN0aW9uW10pOiBTdGF0cyA9PiB7XG4gICAgbGV0IGludGlhbFN0YXRzID0gey4uLmVtcHR5U3RhdHN9O1xuICAgIGxldCBkaWRQbGF5ID0gZmFsc2U7XG5cbiAgICBhY3Rpb25zLmZvckVhY2goYWN0aW9uID0+IHtcbiAgICAgICAgLyogVGhpcyB0byBzZWUgaWYgdGhlIGN1cnJlbnQgYWN0aW9uIGlzIHdoYXQgdGhlIHBsYXllciBpcyBsb29raW5nIGZvciAqL1xuICAgICAgICBsZXQgY29uZGl0aW9uTWV0ID0gZmFsc2U7IGxldCBwbGF5ZXJDb25kaXRpb25NZXQgPSBmYWxzZTtcblxuICAgICAgICBpZihjb25kaXRpb24gPT09IFwiMXN0IFF1YXJ0ZXJcIiAmJiBhY3Rpb24ucGVyaW9kID09PSAxKSBjb25kaXRpb25NZXQgPSB0cnVlO1xuICAgICAgICBlbHNlIGlmKGNvbmRpdGlvbiA9PT0gXCIybmQgUXVhcnRlclwiICYmIGFjdGlvbi5wZXJpb2QgPT09IDIpIGNvbmRpdGlvbk1ldCA9IHRydWU7XG4gICAgICAgIGVsc2UgaWYoY29uZGl0aW9uID09PSBcIjNyZCBRdWFydGVyXCIgJiYgYWN0aW9uLnBlcmlvZCA9PT0gMykgY29uZGl0aW9uTWV0ID0gdHJ1ZTtcbiAgICAgICAgZWxzZSBpZihjb25kaXRpb24gPT09IFwiNHRoIFF1YXJ0ZXJcIiAmJiBhY3Rpb24ucGVyaW9kID09PSA0KSBjb25kaXRpb25NZXQgPSB0cnVlO1xuICAgICAgICBlbHNlIGlmKGNvbmRpdGlvbiA9PT0gXCIxc3QgSGFsZlwiICYmIChhY3Rpb24ucGVyaW9kID09PSAxIHx8IGFjdGlvbi5wZXJpb2QgPT09IDIpKSBjb25kaXRpb25NZXQgPSB0cnVlO1xuICAgICAgICBlbHNlIGlmKGNvbmRpdGlvbiA9PT0gXCIybmQgSGFsZlwiICYmIChhY3Rpb24ucGVyaW9kID09PSAzIHx8IGFjdGlvbi5wZXJpb2QgPT09IDQpKSBjb25kaXRpb25NZXQgPSB0cnVlO1xuICAgICAgICBlbHNlIGlmKGNvbmRpdGlvbiA9PT0gXCJXaG9sZSBHYW1lXCIpIGNvbmRpdGlvbk1ldCA9IHRydWU7XG4gICAgICAgIGlmKHBsYXllck5hbWUudG9Mb3dlckNhc2UoKSA9PT0gYWN0aW9uPy5uYW1lPy50b0xvd2VyQ2FzZSgpKSBwbGF5ZXJDb25kaXRpb25NZXQgPSB0cnVlO1xuICAgICAgICBlbHNlIGlmKHBsYXllck5hbWUgPT09IFwiXCIpIHBsYXllckNvbmRpdGlvbk1ldCA9IHRydWU7XG5cbiAgICAgICAgaWYoY29uZGl0aW9uTWV0ICYmIHBsYXllckNvbmRpdGlvbk1ldCl7XG4gICAgICAgICAgICBkaWRQbGF5ID0gdHJ1ZTtcbiAgICAgICAgICAgIGludGlhbFN0YXRzW2FjdGlvbi5hY3Rpb25UeXBlXSArPSBhY3Rpb24uYW1vdW50O1xuICAgICAgICAgICAgaW50aWFsU3RhdHNbXCJGQU5cIl0gKz0gRmFudGFzeVNjb3JpbmcoYWN0aW9uLmFjdGlvblR5cGUpO1xuICAgICAgICB9XG4gICAgfSlcblxuICAgIC8vSWYgZGlkIG5vdCBwbGF5IHRoZW4gd2UgcmV0dXJuIC0xIFBUUyBzbyBqdXN0IGRvbid0IHNob3cgdGhpcyBnYW1lXG4gICAgaWYoIWRpZFBsYXkpIGludGlhbFN0YXRzW1wiUFRTXCJdID0gLTE7XG5cbiAgICByZXR1cm4gaW50aWFsU3RhdHM7XG59Il0sIm5hbWVzIjpbIkZhbnRhc3lTY29yaW5nIiwic3RhdCIsImVtcHR5U3RhdHMiLCJpbnRpYWxHYW1lUGFyc2UiLCJhY3Rpb25zIiwiaSIsInRlYW1zIiwiZm9yRWFjaCIsImFjdGlvbiIsImxlbmd0aCIsInRlYW1Ucmljb2RlIiwidGVhbVRyaUNvZGUiLCJmaW5kIiwidGVhbSIsIm5hbWUiLCJ1bmRlZmluZWQiLCJwdXNoIiwic3RhdHMiLCJwbGF5ZXJzIiwidCIsImFjdGlvblR5cGUiLCJhbW91bnQiLCJ0ZWFtT2ZDdXJyZW50UGxheWVyIiwicCIsImZpbGxTdGF0cyIsInBsYXllck5hbWUiLCJjb25kaXRpb24iLCJpbnRpYWxTdGF0cyIsImRpZFBsYXkiLCJjb25kaXRpb25NZXQiLCJwbGF5ZXJDb25kaXRpb25NZXQiLCJwZXJpb2QiLCJ0b0xvd2VyQ2FzZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/functions/players.ts\n"));

/***/ })

});